drop SEQUENCE USER_ID_SEQ;
CREATE SEQUENCE USER_ID_SEQ;

DROP TABLE users cascade;

CREATE TABLE USERS
( USER_ID     INTEGER PRIMARY KEY NOT NULL,
  LOGIN_NAME  VARCHAR(50),
  FIRST_NAME      VARCHAR(20),
  LAST_NAME       VARCHAR(25) ,
  PHOTO_ID        INTEGER,
  EMAIL           VARCHAR(50) CONSTRAINT USER_EMAIL_NN NOT NULL,
  CREATED_DATE    DATE CONSTRAINT USER_CREATED_DATE_NN NOT NULL,
  RETIREE         varchar(1) DEFAULT 'N',
  HORSE_POWER     INTEGER
);
  
ALTER TABLE USERS ADD 
  CONSTRAINT USERS_EMAIL_UK
 UNIQUE (EMAIL);
    
drop SEQUENCE PROFILE_ID_SEQ;      
CREATE SEQUENCE PROFILE_ID_SEQ;  

DROP TABLE PROFILE CASCADE;
CREATE TABLE PROFILES
( PROFILE_ID INTEGER PRIMARY KEY NOT NULL,
  USER_ID     INTEGER 
);

ALTER TABLE PROFILES ADD 
  CONSTRAINT PROFILES_USER_ID_FK 
 FOREIGN KEY (USER_ID) 
 REFERENCES USERS (USER_ID);

drop SEQUENCE STORY_ID_SEQ;  
CREATE SEQUENCE STORY_ID_SEQ; 

DROP TABLE stories CASCADE;
CREATE TABLE STORIES
( STORY_ID     INTEGER PRIMARY KEY NOT NULL,
  STORY_TITLE  VARCHAR(300),
  STORY_URL  VARCHAR(300),
  STORY_TEASER  VARCHAR(300),
  STORY_CREATED_DATE    DATE CONSTRAINT STORY_CREATED_DATE NOT NULL,
  POSTED_BY_USER_ID     INTEGER,
  PHOTO_ID  INTEGER,
  VIDEO_ID  INTEGER,
  VOTES INTEGER
);

ALTER TABLE STORIES ADD 
  CONSTRAINT STORIES_STORIES_ID_FK 
 FOREIGN KEY (POSTED_BY_USER_ID) 
 REFERENCES USERS (USER_ID);
 
 drop SEQUENCE COMMENT_ID_SEQ; 
 CREATE SEQUENCE COMMENT_ID_SEQ; 
 
 DROP TABLE comments CASCADE; 
 CREATE TABLE COMMENTS
( COMMENT_ID INTEGER PRIMARY KEY NOT NULL,
  STORY_ID  INTEGER,
  COMMENT_TEXT VARCHAR(140),
  COMMENTED_BY_USER_ID INTEGER CONSTRAINT COMMENTED_BY_USER_ID NOT NULL,
  COMMENT_CREATED_DATE DATE CONSTRAINT COMMENT_CREATED_DATE NOT NULL,
  COMMENT_MODERATED VARCHAR(1) DEFAULT 'N'  
);

ALTER TABLE COMMENTS ADD 
  CONSTRAINT COMMENTS_STORY_ID_FK 
 FOREIGN KEY (STORY_ID) 
 REFERENCES STORIES (STORY_ID);
 
 CREATE SEQUENCE PHOTO_ID_seq;
 
 DROP TABLE photos CASCADE;
 CREATE TABLE PHOTOS
( PHOTO_ID INTEGER PRIMARY KEY NOT NULL,
  USER_ID INTEGER,
  STORY_ID  INTEGER,
  PHOTO_FILE_NAME VARCHAR(140),
  PHOTO_FILE_PATH VARCHAR(140)
);

ALTER TABLE PHOTOS ADD 
  CONSTRAINT PHOTOS_STORY_ID_FK 
 FOREIGN KEY (STORY_ID) 
 REFERENCES STORIES (STORY_ID);
 
 ALTER TABLE PHOTOS ADD 
  CONSTRAINT PHOTOS_USER_ID_FK 
 FOREIGN KEY (USER_ID) 
 REFERENCES USERS (USER_ID);
 
 CREATE SEQUENCE video_id_seq;
 
 DROP TABLE VIDEOS CASCADE;
 CREATE TABLE VIDEOS
( VIDEO_ID INTEGER PRIMARY KEY NOT NULL,
  USER_ID INTEGER,
  STORY_ID  INTEGER,
  VIDEO_FILE_NAME VARCHAR(140),
  VIDEO_FILE_PATH VARCHAR(140)
);

ALTER TABLE VIDEOS ADD 
  CONSTRAINT VIDEO_STORY_ID_FK 
 FOREIGN KEY (STORY_ID) 
 REFERENCES STORIES (STORY_ID);
 
 ALTER TABLE VIDEOS ADD 
  CONSTRAINT VIDEO_USER_ID_FK 
 FOREIGN KEY (USER_ID) 
 REFERENCES USERS (USER_ID);
 
 CREATE SEQUENCE FRIEND_ID_SEQ;
 
  DROP TABLE FRIENDS CASCADE;
 CREATE TABLE FRIENDS
( FRIEND_ID INTEGER PRIMARY KEY NOT NULL,
  USER_ID INTEGER,
  FRIENDING_USER_ID  integer
);

ALTER TABLE FRIENDS ADD 
  CONSTRAINT FRIENDS_USER_ID_FK 
 FOREIGN KEY (USER_ID) 
 REFERENCES USERS (USER_ID);
 
 ALTER TABLE FRIENDS ADD 
  CONSTRAINT FRIENDS_FRIENDING_USER_ID_FK 
 FOREIGN KEY (FRIENDING_USER_ID) 
 REFERENCES USERS (USER_ID);
 
 
create or replace view news_page_stories_vw as
   select stories.STORY_TITLE, stories.STORY_URL, stories.STORY_TEASER,
       comments.COMMENT_TEXT, comments.COMMENT_CREATED_DATE, users.LOGIN_NAME
   from
       stories, comments, users
   where
      stories.STORY_ID = comments.STORY_ID and
      comments.COMMENTED_BY_USER_ID = users.USER_ID
   order by comments.COMMENT_CREATED_DATE DESC;
 
 
 







